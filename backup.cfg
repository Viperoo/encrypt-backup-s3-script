### BACKUP CONFIGURATION ###

# KEEP THE PASSWORD SAFE. It is HIGHLY recommended to chmod 400 this file so
# that other users can not read it

# To decrypt backups made by this script, run the following command:
# openssl enc -aes256 -in [encrypted backup] -out decrypted_backup.tgz -pass pass:[backup password] -d -md sha1

## Edit the entries below to match your needs ##

# The password used to encrypt the backup
# NOTE: MAKE SURE THAT YOU CHMOD THIS FILE TO 400 TO AVOID UNAUTHORISED ACCESS
BACKUPPASS=""

# Directory to store backups
LOCALDIR="/backups/local/"

# Temporary directory used during backup creation
TEMPDIR="/tmp/backups/"

# File to log the outcome of backups
LOGFILE="/var/log/backup.log"

# Number of days to store daily local backups
LOCALAGEDAILIES="5"

# Number of days to store daily remote backups
REMOTEAGEDAILIES="2"

# Number of days to store weekly local backups
LOCALAGEWEEKLIES="2"

# Number of days to store weekly remote backups
REMOTEAGEWEEKLIES="2"

# Number of days to store monthly local backups
LOCALAGEMONTHLIES="183"

# Number of days to store monthly remote backups
REMOTEAGEMONTHLIES="183"

# OPTIONAL: If you want MySQL to be backed up, enter the root password below
ROOTMYSQL=""

# Below is a list of files and directories that will be backed up in the tar
# backup. To add an entry, add a new line and increment the number in brackets
BACKUP[0]="/root/scripts/backup/backup.cfg"
BACKUP[1]="/etc/"

# Files and directories to exclude from tar backups
# To add an entry, add a new line and increment the number in brackets
# NOTE: DO NOT LEAVE A TRAILING SLASH ON LINUX - IT WILL CAUSE IT TO NOT WORK
EXCLUDE[0]=""
